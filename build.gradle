
buildscript {

    ext {
        set("kotlinVersion", "1.4.10")
        set("coroutinesVersion", "1.3.9")
    }

    repositories {
        gradlePluginPortal()
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("com.adarshr:gradle-test-logger-plugin:1.6.0")
    }
}

plugins {
    id("org.jetbrains.dokka") version "1.4.20"
}

apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "com.adarshr.test-logger"

group = "com.github.briandilley.joraph"
version = "0.4-SNAPSHOT"
description = """
Java library for joining objects into a graph, JOin gRAPH
"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    gradlePluginPortal()
    mavenCentral()
    jcenter()
}

ext {
    releaseVersion = !version.toString().endsWith('-SNAPSHOT')
}

test {
    useJUnitPlatform()
    testLogging {
        exceptionFormat 	= "FULL"
        showExceptions 		= true
        showStackTraces 	= true
        showCauses 			= true
    }
    maxParallelForks = 1
    forkEvery = 1
    maxHeapSize = "2g"
}

dependencies {
    dokkaHtmlPlugin("org.jetbrains.dokka:kotlin-as-java-plugin:1.4.20")

    api "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutinesVersion}"

    testApi "org.mockito:mockito-core:2.+"
    testApi "com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0"
    testApi "org.junit.jupiter:junit-jupiter-api:5.7.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

task documentationJar(type: Jar) {
    archiveClassifier.set("javadoc")
    from dokkaHtml
}

task sourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

artifacts {
    archives documentationJar, sourcesJar
}

apply from: 'publishing.gradle'
