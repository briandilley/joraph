
buildscript {

    ext {
        set("kotlinVersion", "1.4.10")
        set("coroutinesVersion", "1.3.9")
    }

    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("com.adarshr:gradle-test-logger-plugin:1.6.0")
    }
}

apply plugin: "io.codearte.nexus-staging"
apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "com.adarshr.test-logger"

group = "com.github.briandilley.joraph"
version = "0.2-SNAPSHOT"
description = """
Java library for joining objects into a graph, JOin gRAPH
"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

test {
    useJUnitPlatform()
    testLogging {
        exceptionFormat 	= "FULL"
        showExceptions 		= true
        showStackTraces 	= true
        showCauses 			= true
    }
    maxParallelForks = 1
    forkEvery = 1
    maxHeapSize = "2g"
}

dependencies {
    api "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutinesVersion}"

    testApi "org.mockito:mockito-core:2.+"
    testApi "com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0"
    testApi "org.junit.jupiter:junit-jupiter-api:5.7.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

if (project.hasProperty("release")) {

    allprojects {
        apply plugin: "signing"
        apply plugin: "maven"

        // Signature of artifacts
        signing {
            sign configurations.archives
        }

        // OSSRH publication
        uploadArchives {
            repositories {
                mavenDeployer {
                    // POM signature
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                    // Target repository
                    repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                        authentication(userName: ossrhUser, password: ossrhPassword)
                    }
                    snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                        authentication(userName: ossrhUser, password: ossrhPassword)
                    }
                    pom.project {
                        name project.name
                        description project.description
                        packaging "jar"
                        url "https://github.com/briandilley/joraph"

                        scm {
                            connection "scm:git:https://github.com/briandilley/joraph.git"
                            developerConnection "scm:git:git@github.com:briandilley/joraph.git"
                            url "https://github.com/briandilley/joraph.git"
                        }

                        licenses {
                            license {
                                name "The MIT License (MIT)"
                                url "http://opensource.org/licenses/MIT"
                                distribution "repo"
                            }
                        }

                        developers {
                            developer {
                                id = "briandilley"
                                name = "Brian Dilley"
                                email = "briandilley@briandilley.com"
                            }
                        }
                    }
                }
            }
        }

        nexusStaging {
            username = ossrhUser
            password = ossrhPassword
        }

        task javadocJar(type: Jar) {
            classifier = "javadoc"
            from javadoc
        }

        task sourcesJar(type: Jar) {
            classifier = "sources"
            from sourceSets.main.allSource
        }

        artifacts {
            archives javadocJar, sourcesJar
        }

    }
}
